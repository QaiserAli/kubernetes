---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      volumes:
        - name: {{ .Chart.Name }}-data
          hostPath:
            path: /data/mysql
#      initContainers:
#       - name: set-permissions
#          image: busybox:1.28.4
#          imagePullPolicy: IfNotPresent
#          command: ["sh", "-c", "chown -R 472:472 /data"]
#          volumeMounts:
#            - name: {{ .Chart.Name }}-data
#              mountPath: /var/lib/mysql
      containers:
        - name:  {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-secrets
                key: rootPassword
          ports:
          - containerPort: {{ .Values.ports.port }}
            name:  {{ .Values.ports.name }}
          volumeMounts:
            - name: {{ .Chart.Name }}-data
              mountPath: /var/lib/mysql
  volumeClaimTemplate:
    - metadata:
        name: {{ .Chart.Name }}-data
      spec:
        accessMode: ["ReadWriteOnce"]
        storageClassName: "default"
        resources:
          requests:
            storage: 500Mi   
